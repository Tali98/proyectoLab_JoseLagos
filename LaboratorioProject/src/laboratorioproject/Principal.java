/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package laboratorioproject;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author tali_
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        none.add(new Palabras("que", 0));
        none.add(new Palabras("a", 0));
        none.add(new Palabras(",", 0));
        none.add(new Palabras(".", 0));
        none.add(new Palabras("de", 0));
        none.add(new Palabras("me", 0));
        none.add(new Palabras("el", 0));
        none.add(new Palabras("of", 0));
        none.add(new Palabras("the", 0));
        none.add(new Palabras("why", 0));
        none.add(new Palabras(",", 0));
        none.add(new Palabras(".", 0));
        none.add(new Palabras("which", 0));
        none.add(new Palabras("this", 0));
        none.add(new Palabras("them", 0));
        none.add(new Palabras("a", 0));
        none.add(new Palabras("in", 0));
        none.add(new Palabras("on", 0));
        none.add(new Palabras("who", 0));
        none.add(new Palabras("whom", 0));
        none.add(new Palabras("or", 0));
        none.add(new Palabras("an", 0));
        none.add(new Palabras("@", 0));
        none.add(new Palabras("#", 0));
        none.add(new Palabras("+", 0));
        none.add(new Palabras("-", 0));
        none.add(new Palabras("_", 0));
        none.add(new Palabras("[", 0));
        none.add(new Palabras("]", 0));
        none.add(new Palabras("and", 0));
        none.add(new Palabras("while", 0));
        none.add(new Palabras("he", 0));
        none.add(new Palabras("she", 0));
        none.add(new Palabras("him", 0));
        none.add(new Palabras("her", 0));
        none.add(new Palabras("they", 0));
        none.add(new Palabras("their", 0));
        none.add(new Palabras("you", 0));
        none.add(new Palabras("me", 0));
        none.add(new Palabras("mine", 0));
        none.add(new Palabras("I", 0));
        none.add(new Palabras("What", 0));
        none.add(new Palabras("is", 0));
        none.add(new Palabras("to", 0));
        none.add(new Palabras("for", 0));
        none.add(new Palabras("with", 0));
        none.add(new Palabras("do", 0));
        none.add(new Palabras("from", 0));
        none.add(new Palabras("Why", 0));
        none.add(new Palabras("How", 0));
        none.add(new Palabras("can", 0));
        none.add(new Palabras("not", 0));
        none.add(new Palabras("my", 0));
        none.add(new Palabras("when", 0));
        none.add(new Palabras("When", 0));
        none.add(new Palabras("between", 0));
        none.add(new Palabras("how", 0));
        none.add(new Palabras("I", 0));
        none.add(new Palabras("are", 0));
        none.add(new Palabras("does", 0));
        none.add(new Palabras(" you", 0));
        none.add(new Palabras("you ", 0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ta_uno = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ta_uno.setEditable(false);
        ta_uno.setColumns(20);
        ta_uno.setRows(5);
        jScrollPane1.setViewportView(ta_uno);

        jMenu1.setText("File");

        jMenuItem1.setText("Abrir Archivo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Top Ten Single");
        jMenuItem2.setEnabled(false);
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Palabras Single");
        jMenuItem3.setEnabled(false);
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Palabras Double");
        jMenuItem4.setEnabled(false);
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("Palabras Triple");
        jMenuItem5.setEnabled(false);
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        TOPTEN.clear();
        listaPalabras.clear();
        listaPalabras2.clear();
        listaPalabras3.clear();
        jMenuItem3.setEnabled(true);
        jMenuItem4.setEnabled(true);
        jMenuItem5.setEnabled(true);
        File fichero = null;
        FileReader fr = null;
        BufferedReader br = null;
        ta_uno.setText("");
        try {
            JFileChooser jfc = new JFileChooser();
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivo de Texto", "txt");
            jfc.setFileFilter(filtro);
            int seleccion = jfc.showOpenDialog(this);
            if (seleccion == JFileChooser.APPROVE_OPTION) {
                fichero = jfc.getSelectedFile();
                fr = new FileReader(fichero);
                br = new BufferedReader(fr);
                String line;
                ta_uno.setText("");
                while ((line = br.readLine()) != null) {
                    ta_uno.append(line);
                    ta_uno.append("\n");
                    Scanner sc = new Scanner(line);
                    sc.useDelimiter(" ");
                    while (sc.hasNext()) {
                        String word = sc.next();

                        listaPalabras.add(new Palabras(word, 0));

                    }
                }
                int cont = 0;
                for (int a = 0; a < listaPalabras.size(); a++) {
                    for (int b = 0; b < listaPalabras.size(); b++) {
                        if (listaPalabras.get(a).getPalabras().equals(listaPalabras.get(b).getPalabras())) {
                            cont++;
                        }
                    }
                    listaPalabras.get(a).setNum(cont);
                    cont = 0;
                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            br.close();
            fr.close();
        } catch (Exception e) {
        }
        for (int a = 0; a < listaPalabras.size(); a++) {
            String word = listaPalabras.get(a).getPalabras();
            int num = listaPalabras.get(a).getNum();
            clone.add(new Palabras(word, num));
        }
        for (int a = 0; a < clone.size(); a++) {
            for (int b = 0; b < none.size(); b++) {
                if (clone.get(a).getPalabras().equals(none.get(b).getPalabras())) {
                    clone.remove(a);
                }
            }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed


    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        TOPTEN.clear();
        ta_uno.setText(" ");
        int mayor = 0;
        String word = "";
        int pos = 0;
        for (int a = 0; a < 10; a++) {
            for (int b = 0; b < listaPalabras.size(); b++) {
                if (listaPalabras.get(b).getNum() > mayor) {
                    mayor = listaPalabras.get(b).getNum();
                    word = listaPalabras.get(b).getPalabras();
                    pos = b;
                }
            }
            TOPTEN.add(new Palabras(word, mayor));
            listaPalabras.get(pos).setNum(0);
            mayor = 0;
            word = "";
            pos = 0;
        }
        ta_uno.append("TOP TEN" + "\n");
        ta_uno.append("-------------" + "\n");
        ta_uno.append("-------------" + "\n");
        ta_uno.append("-------------" + "\n");
        for (Palabras t : TOPTEN) {
            pos++;
            word = t.getPalabras();
            String word2 = Integer.toString(t.getNum());
            ta_uno.append(pos + "." + word + " " + word2);
            ta_uno.append("\n");
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed

        ta_uno.setText(" ");

        for (int a = 0; a < listaPalabras.size(); a++) {
            for (int b = 0; b < listaPalabras.size(); b++) {
                if (listaPalabras.get(a).getPalabras().equals(listaPalabras.get(b).getPalabras())) {
                    listaPalabras.remove(b);
                }
            }
        }
        for (int a = 0; a < listaPalabras.size(); a++) {
            for (int b = 0; b < none.size(); b++) {
                if (listaPalabras.get(a).getPalabras().equals(none.get(b).getPalabras())) {
                    listaPalabras.remove(a);
                }
            }
        }
        String word;
        int pos = 0;
        for (Palabras t : listaPalabras) {
            pos++;
            word = t.getPalabras();
            String word2 = Integer.toString(t.getNum());
            ta_uno.append(pos + "." + word + " " + word2);
            ta_uno.append("\n");
        }

        jMenuItem2.setEnabled(true);

    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed

        ta_uno.setText(" ");
        int b = 1;
        for (int a = 0; a < clone.size(); a++) {
            if (b < clone.size()) {
                String word = clone.get(a).getPalabras() + " " + clone.get(b).getPalabras();
                listaPalabras2.add(new Palabras(word, 0));
                b++;
            }
        }
        int cont = 0;
        for (int a = 0; a < listaPalabras2.size(); a++) {
            for (int c = 0; c < listaPalabras2.size(); c++) {
                if (listaPalabras2.get(a).getPalabras().equals(listaPalabras2.get(c).getPalabras())) {
                    cont++;
                }
            }
            listaPalabras2.get(a).setNum(cont);
            cont = 0;
        }
        for (int a = 0; a < listaPalabras2.size(); a++) {
            for (int c = 0; c < listaPalabras2.size(); c++) {
                if (listaPalabras2.get(a).getPalabras().equals(listaPalabras2.get(c).getPalabras())) {
                    listaPalabras2.remove(c);
                }
            }
        }
        String word;
        int pos = 0;
        for (Palabras t : listaPalabras2) {
            pos++;
            word = t.getPalabras();
            String word2 = Integer.toString(t.getNum());
            ta_uno.append(pos + "." + word + " " + word2);
            ta_uno.append("\n");
        }
        listaPalabras2.clear();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        ta_uno.setText(" ");
        int b = 1;
        int d = 2;
        int cont = 0;
        for (int a = 0; a < clone.size(); a++) {
            if (d < clone.size()) {
                String word = clone.get(a).getPalabras() + " " + clone.get(b).getPalabras() + " " + clone.get(d).getPalabras();
                listaPalabras3.add(new Palabras(word, 0));
                b++;
                d++;
            }
        }
        for (int a = 0; a < listaPalabras3.size(); a++) {
            for (int c = 0; c < listaPalabras3.size(); c++) {
                if (listaPalabras3.get(a).getPalabras().equals(listaPalabras3.get(c).getPalabras())) {
                    cont++;
                }
            }
            listaPalabras3.get(a).setNum(cont);
            cont = 0;
        }
        for (int a = 0; a < listaPalabras3.size(); a++) {
            for (int c = 0; c < listaPalabras3.size(); c++) {
                if (listaPalabras3.get(a).getPalabras().equals(listaPalabras3.get(c).getPalabras())) {
                    listaPalabras3.remove(c);
                }
            }
        }
        String word;
        int pos = 0;
        for (Palabras t : listaPalabras3) {
            pos++;
            word = t.getPalabras();
            String word2 = Integer.toString(t.getNum());
            ta_uno.append(pos + "." + word + " " + word2);
            ta_uno.append("\n");
        }
        listaPalabras3.clear();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea ta_uno;
    // End of variables declaration//GEN-END:variables
ArrayList<Palabras> listaPalabras = new ArrayList();
    ArrayList<Palabras> listaPalabras2 = new ArrayList();
    ArrayList<Palabras> listaPalabras3 = new ArrayList();
    ArrayList<Palabras> TOPTEN = new ArrayList();
    ArrayList<Palabras> none = new ArrayList();
    ArrayList<Palabras> clone = new ArrayList();
}
